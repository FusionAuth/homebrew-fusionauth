/*
 * Copyright (c) 2019, FusionAuth, All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 */

project(group: "io.fusionauth", name: "homebrew-fusionauth", version: "1.99.9", licenses: ["ApacheV2_0"]) {
  workflow {
    fetch {
      cache()
      url(url: "https://repository.savantbuild.org")
    }
    publish {
      cache()
    }
  }
}

// Plugins
idea = loadPlugin(id: "org.savantbuild.plugin:idea:1.0.1")

target(name: "clean", description: "No-op") {
}

target(name: "int", description: "No-op") {
}

target(name: "idea", description: "Updates the IntelliJ IDEA module file") {
  idea.iml()
}

target(name: "test", description: "No-op") {
}

target(name: "publish", description: "Publish the home brew packages.") {
  if (!cleanExecute("./publish.sh", "${project.version}" as String)) {
    fail("Failed to publish Homebrew fusionauth-app [${project.version}]")
  }
}

target(name: "release", description: "Releases a full version of the project", dependsOn: ["int"]) {
}

boolean cleanExecute(String... args) {
  ProcessBuilder pb = new ProcessBuilder(args).inheritIO().directory(new File('.'))

  def process = pb.start()
  process.consumeProcessOutput(System.out, System.err)
  process.waitFor()
  return process.exitValue() == 0
}
